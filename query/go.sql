{
  "tb_user":{
    "selectById" : "select cast(coalesce(real_name,userid) as varchar(50)) as namauser, coalesce(mailshow,'0') email, * from tb_user where userid = $1 and coalesce(mailshow,'0') <> '0'",
    "selectBySFA": "select cast(coalesce(real_name,userid) as varchar(50)) as namauser, coalesce(mailshow,'0') email, * from tb_user where userid = $1 and coalesce(mailshow,'0') <> '0' and company_access like '%;SFA;%'",
    "addLogger"  : "insert into tb_logs(tgl, modul, notes, ivalue, userid) values (current_timestamp, ${par.modul}, ${par.notes}, ${par.ivalue}, ${par.userid}) returning userid;",
    "userInfo"  : "select slsman_id as id_people, slsman_nm sales_nm, (select slsmanpos_nm from tb_m_slsmanpos where slsmanpos_cd=a.slsmanpos_cd) sposition from tb_m_slsman a where slsman_id = $1",
    "changePasswd": "select bi.changepassword(${par.userid}, ${par.password}, ${par.newpassword}) as stat",
    "addprofile": "select addprofile(${par.userid}, ${par.photo});",
    "cekprofile": "select field_id from tb_photo where modul = 'PROFILE' and sid = upper($1) limit 1",
    "getsubordinate": "select upper(userid) as iduser, real_name, id_people from tb_user where upper(userid) in (select getslssubor_unm($1)) order by userid",
    "getsalesuser": "select slsman_id as id_sales, slsman_nm, slsmanpos_cd, trim(LEFT(SPLIT_PART(slsman_nm,' ',1),1)||LEFT(SPLIT_PART(slsman_nm,' ',2),1)||LEFT(SPLIT_PART(slsman_nm,' ',3),1)) inisial, (select slsmanpos_nm from tb_m_slsmanpos where slsmanpos_cd = a.slsmanpos_cd) posisi, coalesce(to_char(time_in,'HH24:MI'), '--:--') masuk, coalesce(to_char(time_out,'HH24:MI'), '--:--') pulang from tb_m_slsman a left outer join bi.tb_attendance b on b.id_sales=a.slsman_id and b.tgl=current_date where slsman_id in (select id_people from tb_user where upper(userid) in (select getslssubor_unm($1))) order by slsman_nm;"
  },
  "tb_customer":{
    "peopleName": "select name as nama from tb_m_people where id_people = $1 limit 1",
    "leadName": "select name as nama from bi.tb_leads where id_people = $1 limit 1",
    "customerList": "select id_people, code, name, address, city from tb_m_people where is_customer = '1' and country = 'INDONESIA' and cast(coalesce(lower(code),'')||' '||lower(name) as varchar(100)) ilike lower(${par.txt}) order by name",
    "customerListByUser": "select b.slsgrp_id, a.id_people, a.code, a.name from tb_m_people a left join tb_m_customersdata b on a.id_people = b.id_people where a.is_customer = '1' and name not like '%**' and b.slsgrp_id in (select getslsareacvrg_id(${par.user})) and lower(active_stat) = 'active' and cast(coalesce(lower(code),'')||' '||lower(name) as varchar(100)) ilike lower(${par.txt}) order by name",
    "info": "select a.id_people,a.code,coalesce(c.pt_info,'') as top,coalesce(cast(b.disc_main as integer), 0) as discount, case when coalesce(d.credit_amt,0) > 999999999 then TO_CHAR(coalesce(d.credit_amt,0)/1000000000, 'FM999G999G999D00 M') else TO_CHAR(coalesce(d.credit_amt,0), 'FM999G999G999D00') end as credit_limit, case when coalesce(r.outstandingar,0) > 999999999 then TO_CHAR(coalesce(r.outstandingar,0)/1000000000, 'FM999G999G999D00 M') else TO_CHAR(coalesce(r.outstandingar,0), 'FM999G999G999D00') end as ar_amt, '+'||replace(a.cellphone, '-','') as contact, case when s.outstanding > 0 then 1 else 0 END as isdue from public.tb_m_people as a left outer join public.tb_m_customersdata as b on a.id_people = b.id_people left outer join public.tb_m_pterms as c on b.pt_id = c.pt_id left outer join (select id_people, credit_amt, max(tgl) tgl from tb_credit_limit group by id_people, credit_amt) d on a.id_people = d.id_people left join (select x.id_customer, sum(x.piu_trans_dbt-x.piu_trans_cdt) as outstandingar from tb_piutang_trans x where cast(x.piu_trans_tgl as date) <= current_date group by x.id_customer) r on r.id_customer = a.id_people left outer join (select x.id_customer, sum(x.piu_trans_dbt)as AR, sum(x.piu_trans_dbt-coalesce(y.totpay,0)) as outstanding from tb_piutang_trans x left join (select id_piutang,sum(piu_trans_cdt) as totpay from tb_piutang_trans where piu_trans_type in (1,2) and cast(piu_trans_tgl as date) <= current_date group by id_piutang) y on x.id_piutang = y.id_piutang where x.piu_duedate <= current_date and (x.piu_trans_dbt-coalesce(y.totpay,0))>0 and x.piu_trans_type=0 group by x.id_customer) s on s.id_customer = a.id_people where a.id_people=$1 limit 1"
  },
  "tb_product":{
    "productList": "SELECT matype,id_product,code || plant as scode,product_name,satuan FROM (SELECT 1 matype,id_product,(CASE WHEN is_wip='0' THEN CAST ('MFG-' || RIGHT ('00000' || CAST (id_product AS TEXT),5) AS VARCHAR) ELSE CAST ('MRM-' || RIGHT ('00000' || CAST (id_product AS TEXT),5) AS VARCHAR) END) AS code,CASE WHEN COALESCE (id_plant,0)=3 THEN '(C)' ELSE '' END AS plant,product_name,'MC' AS satuan FROM tb_product WHERE id_product in (SELECT idproduct::int FROM unnest(string_to_array(get_activeproduct(1), ',')) AS idproduct) UNION ALL SELECT 2 matype,id_mco,CAST ('IC-' || RIGHT ('00000' || CAST (id_mco AS TEXT),5) AS VARCHAR) AS code,'' AS plant,product_name,'PAC' AS satuan FROM tb_m_mco WHERE id_mco in (SELECT idproduct::int FROM unnest(string_to_array(get_activeproduct(2), ',')) AS idproduct)) A WHERE product_name NOT LIKE '%**%' and cast(code||' '||product_name as varchar(200)) ilike $1 order by product_name;",
    "top5": "select (select product_name from tb_product where id_product=a.id_product), to_char(qty, 'FM999G999G999')||' MC' sqty, (qty/max(qty) over ()) pct from (select distinct id_product, sum(qty) over (partition by id_product) qty from bi.tb_quotation where istatus=1 and matype=1 order by 2 desc limit 5) a"
  },
  "dashboard":{
    "profile": "select 0 idx, count(distinct nomor) qty from bi.tb_quotation where tgl = current_date and istatus = '1' and upper(userid) in (select getslssubor_unm(${par.userid})) union all select 1, count(distinct cast(id_product||'-'||matype as varchar)) from bi.tb_quotation where tgl = current_date and istatus = '1' and upper(userid) in (select getslssubor_unm(${par.userid})) union all select 2, count(distinct id_customer) from bi.tb_quotation where tgl = current_date and istatus = '1' and upper(userid) in (select getslssubor_unm(${par.userid}));"
  }
}
